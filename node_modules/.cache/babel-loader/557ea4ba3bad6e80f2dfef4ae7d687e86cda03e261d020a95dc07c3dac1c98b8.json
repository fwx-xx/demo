{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reqPayInfo, reqPayStatus } from '@/api';\nimport QRCode from 'qrcode';\nexport default {\n  name: 'Pay',\n  data() {\n    return {\n      payInfo: {}\n    };\n  },\n  methods: {\n    // 用户获取订单的支付信息\n    async getPayInfo() {\n      // 获取当前订单的编号\n      const {\n        id\n      } = this.$route.query;\n      // 发请求\n      const {\n        code,\n        message,\n        data\n      } = await reqPayInfo(id);\n      // 判断业务逻辑\n      if (code === 200) {\n        this.payInfo = data;\n      } else {\n        this.$message.error(`获取支付信息失败：${message}`);\n      }\n    },\n    // 用于展示支付弹窗\n    async pay() {\n      try {\n        // 生成支付二维码\n        const url = await QRCode.toDataURL(this.payInfo.codeUrl);\n        // 弹窗中嵌入的html结构\n        const str = `<img style=\"width:200px\" src=\"${url}\">`;\n        // 弹窗配置\n        const options = {\n          dangerouslyUseHTMLString: true,\n          //用于解析html字符串\n          title: '微信扫码支付',\n          //弹窗标题\n          center: true,\n          //居中布局\n          showClose: false,\n          //是否显示右上角的x\n          confirmButtonText: '已完成支付',\n          cancelButtonText: '支付遇到问题',\n          showCancelButton: true //是否显示取消按钮\n        };\n        // 弹窗弹起来！\n        this.$alert(str, {\n          ...options,\n          // 用户点击确认按钮，或点击取消按钮，都会调用callback\n          callback: type => {\n            if (type === 'confirm') {\n              // 点击【已完成支付】按钮的逻辑\n              // 第1件事：停止心跳\n              clearInterval(timer);\n              // 第2件事：最后向服务器发一次请求，确认支付状态\n              const {\n                code\n              } = reqPayStatus(this.$route.query.id);\n              if (code === 200) {\n                this.$message.success('支付成功！');\n                this.$router.push('/paysuccess');\n              } else {\n                this.$message.error('您的订单并未支付，请重新扫码支付');\n              }\n            } else {\n              // 点击【支付遇到问题】按钮的逻辑\n              // 第1件事：心跳停止\n              clearInterval(timer);\n              // 第2件事：给个提示\n              this.$message.warning('请致电客服解决');\n            }\n          }\n        });\n        // 开启一个心跳请求\n        let timer = setInterval(async () => {\n          // 获取订单编号\n          const {\n            id\n          } = this.$route.query;\n          // 联系服务器询问当前的支付状态\n          const {\n            code\n          } = await reqPayStatus(id);\n          // 判断业务逻辑\n          if (code === 200) {\n            // 若支付成功了，做以下几件事：\n            // 第1件事：给个提示\n            this.$message.success('支付成功！');\n            // 第2件事：停止心跳\n            clearInterval(timer);\n            // 第3件事：关闭弹窗\n            this.$msgbox.close();\n            // 第4件事：跳转到【支付成功】路由\n            this.$router.push('/paysuccess');\n          }\n        }, 1000);\n      } catch (error) {\n        this.$message.error('显示付款二维码失败，请联系管理员');\n      }\n    }\n  },\n  mounted() {\n    // 调用getPayInfo获取当前订单的支付信息\n    this.getPayInfo();\n  }\n};","map":{"version":3,"names":["reqPayInfo","reqPayStatus","QRCode","name","data","payInfo","methods","getPayInfo","id","$route","query","code","message","$message","error","pay","url","toDataURL","codeUrl","str","options","dangerouslyUseHTMLString","title","center","showClose","confirmButtonText","cancelButtonText","showCancelButton","$alert","callback","type","clearInterval","timer","success","$router","push","warning","setInterval","$msgbox","close","mounted"],"sources":["src/pages/Pay/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"pay-main\">\r\n    <div class=\"pay-container\">\r\n      <div class=\"checkout-tit\">\r\n        <h4 class=\"tit-txt\">\r\n          <span class=\"success-icon\"></span>\r\n          <span class=\"success-info\">订单提交成功，请您及时付款，以便尽快为您发货~~</span>\r\n        </h4>\r\n        <div class=\"paymark\">\r\n          <span class=\"fl\">请您在提交订单<em class=\"orange time\">4小时\r\n            </em>之内完成支付，超时订单会自动取消。订单号：<em>{{$route.query.id}}</em>\r\n          </span>\r\n          <span class=\"fr\"><em class=\"lead\">应付金额：</em><em class=\"orange money\">￥{{payInfo.totalFee}}</em></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"checkout-info\">\r\n        <h4>重要说明：</h4>\r\n        <ol>\r\n          <li>尚品汇商城支付平台目前支持<span class=\"zfb\">微信</span>支付方式。</li>\r\n          <li>其它支付渠道正在调试中，敬请期待。</li>\r\n        </ol>\r\n      </div>\r\n      <div class=\"checkout-steps\">\r\n        <div class=\"step-tit\">\r\n          <h5>支付平台</h5>\r\n        </div>\r\n        <div class=\"step-cont\">\r\n          <ul class=\"payType\">\r\n            <li class=\"active\"><img src=\"./images/pay3.jpg\"></li>\r\n          </ul>\r\n        </div>\r\n        <div class=\"hr\"></div>\r\n        <div class=\"submit\">\r\n          <a class=\"btn\" @click=\"pay\">立即支付</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {reqPayInfo,reqPayStatus} from '@/api'\r\n  import QRCode from 'qrcode'\r\n\r\n  export default {\r\n    name: 'Pay',\r\n    data() {\r\n      return {\r\n        payInfo:{}\r\n      }\r\n    },\r\n    methods:{\r\n      // 用户获取订单的支付信息\r\n      async getPayInfo(){\r\n        // 获取当前订单的编号\r\n        const {id} = this.$route.query\r\n        // 发请求\r\n        const {code,message,data} = await reqPayInfo(id)\r\n        // 判断业务逻辑\r\n        if(code === 200){\r\n          this.payInfo = data\r\n        }else{\r\n          this.$message.error(`获取支付信息失败：${message}`)\r\n        }\r\n      },\r\n      // 用于展示支付弹窗\r\n      async pay(){\r\n        try {\r\n          // 生成支付二维码\r\n          const url = await QRCode.toDataURL(this.payInfo.codeUrl)\r\n          // 弹窗中嵌入的html结构\r\n          const str = `<img style=\"width:200px\" src=\"${url}\">`\r\n          // 弹窗配置\r\n          const options = {\r\n            dangerouslyUseHTMLString: true, //用于解析html字符串\r\n            title:'微信扫码支付', //弹窗标题\r\n            center:true,//居中布局\r\n            showClose:false,//是否显示右上角的x\r\n            confirmButtonText:'已完成支付',\r\n            cancelButtonText:'支付遇到问题',\r\n            showCancelButton:true,//是否显示取消按钮\r\n          }\r\n          // 弹窗弹起来！\r\n          this.$alert(str, {\r\n            ...options,\r\n            // 用户点击确认按钮，或点击取消按钮，都会调用callback\r\n            callback:(type)=>{\r\n              if(type === 'confirm'){\r\n                // 点击【已完成支付】按钮的逻辑\r\n                // 第1件事：停止心跳\r\n                clearInterval(timer)\r\n                // 第2件事：最后向服务器发一次请求，确认支付状态\r\n                const {code} = reqPayStatus(this.$route.query.id)\r\n                if(code === 200){\r\n                  this.$message.success('支付成功！')\r\n                  this.$router.push('/paysuccess')\r\n                }else{\r\n                  this.$message.error('您的订单并未支付，请重新扫码支付')\r\n                }\r\n              }else{\r\n                // 点击【支付遇到问题】按钮的逻辑\r\n                // 第1件事：心跳停止\r\n                clearInterval(timer)\r\n                // 第2件事：给个提示\r\n                this.$message.warning('请致电客服解决')\r\n              }\r\n            }\r\n          });\r\n          // 开启一个心跳请求\r\n          let timer = setInterval(async() => {\r\n            // 获取订单编号\r\n            const {id} = this.$route.query\r\n            // 联系服务器询问当前的支付状态\r\n            const {code} = await reqPayStatus(id)\r\n            // 判断业务逻辑\r\n            if(code === 200){\r\n              // 若支付成功了，做以下几件事：\r\n              // 第1件事：给个提示\r\n              this.$message.success('支付成功！')\r\n              // 第2件事：停止心跳\r\n              clearInterval(timer)\r\n              // 第3件事：关闭弹窗\r\n              this.$msgbox.close()\r\n              // 第4件事：跳转到【支付成功】路由\r\n              this.$router.push('/paysuccess')\r\n            }\r\n          },1000);\r\n        } catch (error) {\r\n          this.$message.error('显示付款二维码失败，请联系管理员')\r\n        }\r\n      }\r\n    },\r\n    mounted() {\r\n      // 调用getPayInfo获取当前订单的支付信息\r\n      this.getPayInfo()\r\n    },\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .pay-main {\r\n    margin-bottom: 20px;\r\n\r\n    .pay-container {\r\n      margin: 0 auto;\r\n      width: 1200px;\r\n\r\n      a:hover {\r\n        color: #4cb9fc;\r\n      }\r\n\r\n      .orange {\r\n        color: #e1251b;\r\n      }\r\n\r\n      .money {\r\n        font-size: 18px;\r\n      }\r\n\r\n      .zfb {\r\n        color: #e1251b;\r\n        font-weight: 700;\r\n      }\r\n\r\n      .checkout-tit {\r\n        padding: 10px;\r\n\r\n        .tit-txt {\r\n          font-size: 14px;\r\n          line-height: 21px;\r\n\r\n          .success-icon {\r\n            width: 30px;\r\n            height: 30px;\r\n            display: inline-block;\r\n            background: url(./images/icon.png) no-repeat 0 0;\r\n          }\r\n\r\n          .success-info {\r\n            padding: 0 8px;\r\n            line-height: 30px;\r\n            vertical-align: top;\r\n          }\r\n        }\r\n\r\n        .paymark {\r\n          overflow: hidden;\r\n          line-height: 26px;\r\n          text-indent: 38px;\r\n\r\n          .fl {\r\n            float: left;\r\n          }\r\n\r\n          .fr {\r\n            float: right;\r\n\r\n            .lead {\r\n              margin-bottom: 18px;\r\n              font-size: 15px;\r\n              font-weight: 400;\r\n              line-height: 22.5px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .checkout-info {\r\n        padding-left: 25px;\r\n        padding-bottom: 15px;\r\n        margin-bottom: 10px;\r\n        border: 2px solid #e1251b;\r\n\r\n        h4 {\r\n          margin: 9px 0;\r\n          font-size: 14px;\r\n          line-height: 21px;\r\n          color: #e1251b;\r\n        }\r\n\r\n        ol {\r\n          padding-left: 25px;\r\n          list-style-type: decimal;\r\n          line-height: 24px;\r\n          font-size: 14px;\r\n        }\r\n\r\n        ul {\r\n          padding-left: 25px;\r\n          list-style-type: disc;\r\n          line-height: 24px;\r\n          font-size: 14px;\r\n        }\r\n      }\r\n\r\n      .checkout-steps {\r\n        border: 1px solid #ddd;\r\n        padding: 25px;\r\n\r\n        .hr {\r\n          height: 1px;\r\n          background-color: #ddd;\r\n        }\r\n\r\n        .step-tit {\r\n          line-height: 36px;\r\n          margin: 15px 0;\r\n        }\r\n\r\n        .step-cont {\r\n          margin: 0 10px 12px 20px;\r\n\r\n          ul {\r\n            font-size: 0;\r\n\r\n            li {\r\n              margin: 2px;\r\n              display: inline-block;\r\n              padding: 5px 20px;\r\n              border: 1px solid #ddd;\r\n              cursor: pointer;\r\n              line-height: 18px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .submit {\r\n        text-align: center;\r\n\r\n        .btn {\r\n          display: inline-block;\r\n          padding: 15px 45px;\r\n          margin: 15px 0 10px;\r\n          font: 18px \"微软雅黑\";\r\n          font-weight: 700;\r\n          border-radius: 0;\r\n          background-color: #e1251b;\r\n          border: 1px solid #e1251b;\r\n          color: #fff;\r\n          text-align: center;\r\n          vertical-align: middle;\r\n          cursor: pointer;\r\n          user-select: none;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n</style>"],"mappings":";AAyCA,SAAAA,UAAA,EAAAC,YAAA;AACA,OAAAC,MAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;IACA,MAAAC,WAAA;MACA;MACA;QAAAC;MAAA,SAAAC,MAAA,CAAAC,KAAA;MACA;MACA;QAAAC,IAAA;QAAAC,OAAA;QAAAR;MAAA,UAAAJ,UAAA,CAAAQ,EAAA;MACA;MACA,IAAAG,IAAA;QACA,KAAAN,OAAA,GAAAD,IAAA;MACA;QACA,KAAAS,QAAA,CAAAC,KAAA,aAAAF,OAAA;MACA;IACA;IACA;IACA,MAAAG,IAAA;MACA;QACA;QACA,MAAAC,GAAA,SAAAd,MAAA,CAAAe,SAAA,MAAAZ,OAAA,CAAAa,OAAA;QACA;QACA,MAAAC,GAAA,oCAAAH,GAAA;QACA;QACA,MAAAI,OAAA;UACAC,wBAAA;UAAA;UACAC,KAAA;UAAA;UACAC,MAAA;UAAA;UACAC,SAAA;UAAA;UACAC,iBAAA;UACAC,gBAAA;UACAC,gBAAA;QACA;QACA;QACA,KAAAC,MAAA,CAAAT,GAAA;UACA,GAAAC,OAAA;UACA;UACAS,QAAA,EAAAC,IAAA;YACA,IAAAA,IAAA;cACA;cACA;cACAC,aAAA,CAAAC,KAAA;cACA;cACA;gBAAArB;cAAA,IAAAV,YAAA,MAAAQ,MAAA,CAAAC,KAAA,CAAAF,EAAA;cACA,IAAAG,IAAA;gBACA,KAAAE,QAAA,CAAAoB,OAAA;gBACA,KAAAC,OAAA,CAAAC,IAAA;cACA;gBACA,KAAAtB,QAAA,CAAAC,KAAA;cACA;YACA;cACA;cACA;cACAiB,aAAA,CAAAC,KAAA;cACA;cACA,KAAAnB,QAAA,CAAAuB,OAAA;YACA;UACA;QACA;QACA;QACA,IAAAJ,KAAA,GAAAK,WAAA;UACA;UACA;YAAA7B;UAAA,SAAAC,MAAA,CAAAC,KAAA;UACA;UACA;YAAAC;UAAA,UAAAV,YAAA,CAAAO,EAAA;UACA;UACA,IAAAG,IAAA;YACA;YACA;YACA,KAAAE,QAAA,CAAAoB,OAAA;YACA;YACAF,aAAA,CAAAC,KAAA;YACA;YACA,KAAAM,OAAA,CAAAC,KAAA;YACA;YACA,KAAAL,OAAA,CAAAC,IAAA;UACA;QACA;MACA,SAAArB,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;EACA0B,QAAA;IACA;IACA,KAAAjC,UAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}