{"ast":null,"code":"export default {\n  name: \"Pagination\",\n  props: ['total', 'pageSize', 'pageNo', 'continues', 'sendPageNo'],\n  computed: {\n    // 计算总页数\n    totalPage() {\n      return Math.ceil(this.total / this.pageSize);\n    },\n    // 计算连续页的：起始、结束\n    startEnd() {\n      // 取出要用的：pageNo(页码)、continues(连续)\n      const {\n        pageNo,\n        continues,\n        totalPage\n      } = this;\n      let start = 0; //起始\n      let end = 0; //结束\n      // 若连续页数(continues)大于总页数(totalPage)，推都不推，直接全给\n      if (continues > totalPage) {\n        start = 1;\n        end = totalPage;\n      } else {\n        // 左推计算起始、右推计算结束\n        start = pageNo - (continues - 1) / 2;\n        end = pageNo + (continues - 1) / 2;\n        // 判断推完后左边是否“溢出” —— 左边冒了（左重置）\n        if (start < 1) {\n          start = 1;\n          end = continues;\n        }\n        // 判断推完后右边是否“溢出” —— 右边冒了（右重置）\n        if (end > totalPage) {\n          start = totalPage - continues + 1;\n          end = totalPage;\n        }\n      }\n      // 返回计算的结果（值为对象，里面包含着：start、end）\n      return {\n        start,\n        end\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","props","computed","totalPage","Math","ceil","total","pageSize","startEnd","pageNo","continues","start","end"],"sources":["src/components/Pagination/index.vue"],"sourcesContent":["<template>  \r\n\t<div class=\"pagination\" v-if=\"total\">\r\n    <button @click=\"sendPageNo(pageNo-1)\" :disabled=\"pageNo === 1\">上一页</button>\r\n    <button @click=\"sendPageNo(1)\" v-if=\"startEnd.start !== 1\">1</button>\r\n    <span v-if=\"startEnd.start > 2\">···</span>\r\n    \r\n    <button \r\n      v-for=\"(_,index) in (startEnd.end - startEnd.start + 1)\" \r\n      :key=\"index\"\r\n      :class=\"{active:(index + startEnd.start === pageNo)}\"\r\n      @click=\"sendPageNo(index + startEnd.start)\"\r\n    >\r\n      {{index + startEnd.start}}\r\n    </button>\r\n\r\n    <span v-if=\"startEnd.end < totalPage - 1\">···</span>\r\n    <button @click=\"sendPageNo(totalPage)\"  v-if=\"startEnd.end !== totalPage\">{{totalPage}}</button>\r\n    <button @click=\"sendPageNo(pageNo+1)\"  :disabled=\"pageNo === totalPage\">下一页</button>\r\n\r\n    <span>共 {{total}} 条</span>\r\n  </div>\r\n</template>\r\n\r\n<script>    \r\n  export default {      \r\n    name: \"Pagination\",    \r\n    props:['total','pageSize','pageNo','continues','sendPageNo'],\r\n    computed:{\r\n      // 计算总页数\r\n      totalPage(){\r\n        return Math.ceil(this.total / this.pageSize)\r\n      },\r\n      // 计算连续页的：起始、结束\r\n      startEnd(){\r\n        // 取出要用的：pageNo(页码)、continues(连续)\r\n        const {pageNo,continues,totalPage} = this\r\n        let start = 0 //起始\r\n        let end = 0 //结束\r\n        // 若连续页数(continues)大于总页数(totalPage)，推都不推，直接全给\r\n        if(continues > totalPage){\r\n          start = 1\r\n          end = totalPage\r\n        }else{\r\n          // 左推计算起始、右推计算结束\r\n          start = pageNo - (continues-1)/2\r\n          end = pageNo + (continues-1)/2\r\n          // 判断推完后左边是否“溢出” —— 左边冒了（左重置）\r\n          if(start < 1){\r\n            start = 1\r\n            end = continues\r\n          }\r\n          // 判断推完后右边是否“溢出” —— 右边冒了（右重置）\r\n          if(end > totalPage){\r\n            start = totalPage - continues + 1\r\n            end = totalPage\r\n          }\r\n        }\r\n        // 返回计算的结果（值为对象，里面包含着：start、end）\r\n        return {start,end}\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .pagination {\r\n    text-align: center;\r\n\r\n    button {\r\n      margin: 0 5px;\r\n      background-color: #f4f4f5;\r\n      color: gray;\r\n      outline: none;\r\n      border-radius: 2px;\r\n      padding: 0 4px;\r\n      vertical-align: top;\r\n      display: inline-block;\r\n      font-size: 13px;\r\n      min-width: 35.5px;\r\n      height: 28px;\r\n      line-height: 28px;\r\n      cursor: pointer;\r\n      box-sizing: border-box;\r\n      text-align: center;\r\n      border: 0;\r\n\r\n      &[disabled] {\r\n        color: #c0c4cc;\r\n        cursor: not-allowed;\r\n      }\r\n\r\n      &.active {\r\n        cursor: not-allowed;\r\n        background-color: #c81623;\r\n        color: #fff;\r\n      }\r\n    }\r\n\r\n    span {\r\n      display: inline-block;\r\n      line-height: 28px;\r\n      font-size: 14px;\r\n      color: gray;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n</style>"],"mappings":"AAwBA;EACAA,IAAA;EACAC,KAAA;EACAC,QAAA;IACA;IACAC,UAAA;MACA,OAAAC,IAAA,CAAAC,IAAA,MAAAC,KAAA,QAAAC,QAAA;IACA;IACA;IACAC,SAAA;MACA;MACA;QAAAC,MAAA;QAAAC,SAAA;QAAAP;MAAA;MACA,IAAAQ,KAAA;MACA,IAAAC,GAAA;MACA;MACA,IAAAF,SAAA,GAAAP,SAAA;QACAQ,KAAA;QACAC,GAAA,GAAAT,SAAA;MACA;QACA;QACAQ,KAAA,GAAAF,MAAA,IAAAC,SAAA;QACAE,GAAA,GAAAH,MAAA,IAAAC,SAAA;QACA;QACA,IAAAC,KAAA;UACAA,KAAA;UACAC,GAAA,GAAAF,SAAA;QACA;QACA;QACA,IAAAE,GAAA,GAAAT,SAAA;UACAQ,KAAA,GAAAR,SAAA,GAAAO,SAAA;UACAE,GAAA,GAAAT,SAAA;QACA;MACA;MACA;MACA;QAAAQ,KAAA;QAAAC;MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}